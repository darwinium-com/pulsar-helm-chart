components:
  zookeeper: true
  bookkeeper: true
  autorecovery: true
  broker: true
  functions: true
  proxy: true
  toolset: true
  pulsar_manager: true
  sql_worker: false
  kop: false
  mop: false
  pulsar_detector: false
  superset: false
volumes:
  persistence: true
  local_storage: false

monitoring:
  prometheus: false
  grafana: false
  node_exporter: false
  alert_manager: false
  loki: false
  datadog: false

zookeeper:
  replicaCount: 3

bookkeeper:
  #3 replicas is required by default settings, ajdust in the Helm chart if undesirable
  replicaCount: 3
  configData:
    PULSAR_MEM: >
      -Xms128m -Xmx2048m -XX:MaxDirectMemorySize=512m
    numAddWorkerThreads: "2"

broker:
  replicaCount: 3
  configData:
    PULSAR_MEM: >
      -Xms512m -Xmx4096m -XX:MaxDirectMemorySize=1024m
    PULSAR_GC: >
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=10
      -Dio.netty.leakDetectionLevel=disabled
      -Dio.netty.recycler.linkCapacity=1024
      -XX:+ParallelRefProcEnabled
      -XX:+UnlockExperimentalVMOptions
      -XX:+AggressiveOpts
      -XX:+DoEscapeAnalysis
      -XX:ParallelGCThreads=4
      -XX:ConcGCThreads=4
      -XX:G1NewSizePercent=50
      -XX:+DisableExplicitGC
      -XX:-ResizePLAB
      -XX:+ExitOnOutOfMemoryError
      -XX:+PerfDisableSharedMem
    # @deprecated:
    # 1. You can use a service account to assume an IAM role to access S3 bucket
    # 2. You can use a k8s secret to reference AWS credentials. See `offload.s3.secret`
    # AWS_ACCESS_KEY_ID: "[YOUR AWS ACCESS KEY ID]"
    # AWS_SECRET_ACCESS_KEY: "[YOUR SECRET]"
    managedLedgerDefaultEnsembleSize: "3"
    managedLedgerDefaultWriteQuorum: "3"
    managedLedgerDefaultAckQuorum: "2"
    brokerDeleteInactiveTopicsEnabled: "false"
    defaultRetentionTimeInMinutes: "4320"
    allowAutoTopicCreation: "false"
    allowAutoTopicCreationType: "partitioned"
    defaultNumPartitions: "3"
    brokerDeleteInactiveTopicsFrequencySeconds: "36000"
    brokerDeleteInactiveTopicsMaxInactiveDurationSeconds: "1209600"
    subscriptionExpirationTimeMinutes: "4320"
    superUserRoles: "dwn-mothership-admin,dwn-tenant-admin"
proxy:
  replicaCount: 2
  configData:
    PULSAR_MEM: >
      -Xms512m -Xmx4096m -XX:MaxDirectMemorySize=1024m
    PULSAR_GC: >
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=10
      -Dio.netty.leakDetectionLevel=disabled
      -Dio.netty.recycler.linkCapacity=1024
      -XX:+ParallelRefProcEnabled
      -XX:+UnlockExperimentalVMOptions
      -XX:+AggressiveOpts
      -XX:+DoEscapeAnalysis
      -XX:ParallelGCThreads=4
      -XX:ConcGCThreads=4
      -XX:G1NewSizePercent=50
      -XX:+DisableExplicitGC
      -XX:-ResizePLAB
      -XX:+ExitOnOutOfMemoryError
      -XX:+PerfDisableSharedMem


auth:
  authentication:
    enabled: false
    provider: "jwt"
    jwt:
      # Enable JWT authentication
      # If the token is generated by a secret key, set the usingSecretKey as true.
      # If the token is generated by a private key, set the usingSecretKey as false.
      usingSecretKey: false #for symetric encryption
  authorization:
    enabled: false
  superUsers:
    # broker to broker communication
    broker: "broker-admin"
    # proxy to broker communication
    proxy: "proxy-admin"
    # websocket proxy to broker communication
    websocket: "ws-admin"
    # pulsar-admin client to broker/proxy communication
    client: "admin"
    # pulsar-manager to broker/proxy communication
    pulsar_manager: "pulsar-manager-admin"

## Images
##
## Control what images to use for each component
images:
  zookeeper:
    # repository: darwinium.jfrog.io/dwn-docker/pulsar-all
    repository: apachepulsar/pulsar-all
    tag: 2.10.1
    pullPolicy: IfNotPresent
  bookie:
    # repository: darwinium.jfrog.io/dwn-docker/pulsar-all
    repository: apachepulsar/pulsar-all
    tag: 2.10.1
    pullPolicy: IfNotPresent
  autorecovery:
    # repository: darwinium.jfrog.io/dwn-docker/pulsar-all
    repository: apachepulsar/pulsar-all
    tag: 2.10.1
    pullPolicy: IfNotPresent
  broker:    # repository: darwinium.jfrog.io/dwn-docker/pulsar-all
    repository: apachepulsar/pulsar-all
    tag: 2.10.1
    pullPolicy: IfNotPresent
  proxy:
    # repository: darwinium.jfrog.io/dwn-docker/pulsar-all
    repository: apachepulsar/pulsar-all
    tag: 2.10.1
    pullPolicy: IfNotPresent
  functions:
    # repository: darwinium.jfrog.io/dwn-docker/pulsar-all
    repository: apachepulsar/pulsar-all
    tag: 2.10.1
    pullPolicy: IfNotPresent
